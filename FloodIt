from fltk import *
import random

class FloodGame(Fl_Window):
	def colorcb(self, wid, color):
		self.attempts+=1
		for but in self.flooded:
			but.box(FL_DOWN_BOX)
			but.color(color)
			
		self.redraw()
		self.checkarea(self.
		self.outp.value(str(self.attempts))
	
	def checkarea(self, flooded):
		idx=self.bl.index(flooded)
		
		try:
			if self.bl[idx].color()==self.bl[idx-1].color():
				if self.bl[idx-1] not in self.flooded:
					self.flooded.append(self.bl[idx-1])
					self.checkarea(self.flooded[-1])
				
			if self.bl[idx].color()==self.bl[idx+1].color():
				if self.bl[idx+1] not in self.flooded:
					self.flooded.append(self.bl[idx+1])
					self.checkarea(self.flooded[-1])		
				
			if self.bl[idx].color()==self.bl[idx-14].color():
				if self.bl[idx-14] not in self.flooded:
					self.flooded.append(self.bl[idx-14])
					self.checkarea(self.flooded[-1])	
				
			if self.bl[idx].color()==self.bl[idx-+14].color():
				if self.bl[idx+14] not in self.flooded:
					self.flooded.append(self.bl[idx+14])
					self.checkarea(self.flooded[-1])		
		except:
			print('fail')
		
	
	def __init__(self,x,y,w,h,label=None):
		Fl_Window.__init__(self, x, y, w, h, label)
		self.flooded=[]
		self.colors=[88,91, 94,102,145,183]
		self.attempts=0
		self.width=25
		self.bl=[]
		self.colorbl=[]
		self.outp=Fl_Output(40, 335, 100, 40)
		
		for x in range(6):
			self.colorbut=Fl_Button(40, 25+52*x, 100, 40)
			self.colorbl.append(self.colorbut)
			self.colorbut.color(self.colors[x])
			self.colorbut.callback(self.colorcb, self.colors[x])
		
		for y in range(1,15):
			for x in range(7,21):
				color=self.colors[random.randrange(len(self.colors))]
				self.box=Fl_Box(x*self.width, y*self.width, self.width,self.width)
				self.box.color(color)
				self.box.box(FL_FLAT_BOX)
				self.bl.append(self.box)
			
			
			
		self.flooded.append(self.bl[0])
		self.flooded[0].callback(self.checkarea, self.flooded)
		self.checkarea(self.flooded)
		
		
		
x=Fl.w()//2-225
y=Fl.h()//2-200
w=550
h=400

game=FloodGame(x,y,w,h, 'Flood-It')

game.show()
Fl.run()


#flooded initially consists of the square that has color x along with any other squares with color x
#when you click on a color button, flooded list adds any other squares that are matching the flooded squares' colors to it
#all squares in flooded change color when color button is pressed
#recursive function that checks area around squares


